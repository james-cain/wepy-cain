<style lang="less">
  .container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    &-menu {
      height: 80rpx;
      width: 96%;
      padding: 0 2%;
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
    }
    &-map {
      flex: 1;
      width: 100%;
    }
  }

  .menu {
    &-login {
      width: 15%
    }
    &-search {
      width: 65%
    }
    &-switch {
      width: 20%
    }
  }
</style>
<template>
  <view class="container">
    <view class="container-menu">
      <button type="default" size="default" @tap="markertap">弹出层</button>
    </view>
    <view class="container-map">
      <map id="map" longitude="{{center[0]}}" latitude="{{center[1]}}" scale="14" controls="{{controls}}"
      markers="{{markers}}" @markertap="markertap" polyline="{{polyline}}" show-location style="width: 100%; height: 500px;"></map>
    </view>
    <drawer :showModalStatus="showModalStatus"></drawer>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import drawer from '../components/drawer'

  export default class Index extends wepy.page {
    config = {

    }

    components = {
      drawer: drawer
    }

    data = {
      height: 0,
      center: [],
      showModalStatus: false,
      userInfo: {
        nickName: '加载中...'
      },
      searchValue: '',
      type: '列表',
      markers: []
    }

    computed = {

    }

    methods = {
      switchType () {

      },
      markertap (e) {
        console.log(e)
        this.showModalStatus = true
        this.$apply()
        this.$invoke('drawer', 'showModal', this.showModalStatus)
        console.log(this.showModalStatus)
      }
    }

    events = {

    }

    onLoad() {
      let self = this
      // const system = wx.getSystemInfoSync()
      // self.height = system.windowHeight
      wx.getLocation({
        type: 'gcj02',
        success: (res) => {
          self.center = [res.longitude, res.latitude]
          for (let i = 0; i < 10; i++) {
            let marker = {}
            marker.width = 20
            marker.height = 20
            marker.id = i
            marker.iconPath = '../images/dianpu.png'
            marker.longitude = Math.random() + res.longitude
            marker.latitude = Math.random() + res.latitude
            self.markers.push(marker)
          }
          self.$apply()
        }
      })
      this.$parent.getUserInfo(function (userInfo) {
        if (userInfo) {
          self.userInfo = userInfo
        }

        self.$apply()
      })
      console.log(self)
    }
  }
</script>

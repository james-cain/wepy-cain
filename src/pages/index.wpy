<style lang='less'>
  .menu {
    position: absolute;
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    background-color: #ffffff;
    &-login {
      position: relative;
      width: 55px;
      height: 100%;
    }
    &-search{
      flex: 1;
      border-radius: 3px;
      background-color: #e6e6e6;
      display: flex;
      flex-direction: row;
      justify-content: center;
    }
    &-switch {
      position: relative;
      width: 55px;
      height: 100%;
      line-height: 48px;
      font-size: 16px;
      color: #7ccdd4;
      text-align: center;
    }
  }
  .login-img {
    position: relative;
    width: 25px;
    height: 25px;
    top: 11px;
    left: 15px;
  }
  .search-icon-area {
    position: relative;
    height: 100%;
    width: 35px;
  }
  .search-del-area {
    position: relative;
    height: 100%;
    width: 29px;
  }
  .search {
    &-icon {
      position:relative;
      width: 16px;
      height: 16px;
      left: 11px;
      top: 5px;
    }
    &-input {
      flex: 1;
    }
    &-delete {
      position:relative;
      width: 16px;
      height: 16px;
      top: 5px;
      left: 2px;
    }
  }

</style>
<template>
   <view class="homepage">
     <view class="menu" style="height: {{menuHeight}}px;">
       <view class="menu-login">
          <image src="http://mspshow.szcomtop.com/msp-charge/include/miniapps/images/c_main_more_icon.png" mode="scaleToFill" class="login-img" @tap="goUserPage"></image>
       </view>
       <view class="menu-search">
         <view class="search-icon-area">
            <image src="http://mspshow.szcomtop.com/msp-charge/include/miniapps/images/c_search_box_icon@2x.png" mode="scaleToFill" class="search-icon"/>
         </view>
         <input class="search-input" type="text" @input="search" placeholder="搜索站点" placeholder-style="font-size: 14px; color: #999999;" confirm-type="search"/>
         <view class="search-del-area">
           <image src="http://mspshow.szcomtop.com/msp-charge/include/miniapps/images/s_text_view_delete_icon.png" mode="scaleToFill" class="search-delete"/>
         </view>
       </view>
       <view class="menu-switch" @tap="switchType">
          {{switchType === 'map' ? '列表' : '地图'}}
       </view>
    </view>
    <view style="position: relative; width: {{mapWidth}}; height: {{mapHeight}}px; top: {{mapTop}}px" wx:if="{{switchType === 'map' ? false : true}}">
      <menu :pileMenuList.sync="pileMenuList" ></menu>
      <tableList :pileTableList.sync="pileTableList"></tableList>
    </view>
    <map id="map" longitude="{{point.longitude}}" latitude="{{point.latitude}}" markers="{{markers}}" scale="{{mapScale}}" show-location @regionchange="regionchange" controls="{{controls}}" @markertap="markertap" @controltap="controltap" style="width: {{mapWidth}}; height: {{mapHeight}}px; top: {{mapTop}}px"  wx:if="{{switchType === 'map' ? true : false}}"></map>
   </view>
</template>

<script>
  import wepy from 'wepy'
  import menu from '../components/menu'
  import tableList from '../components/tableList'
  import CTP from '../utils/ajax'
  // import checkNetWorkStatus from '../utils/CheckNetWork'

  export default class Index extends wepy.page {
    config = {

    }

    components = {
      menu: menu,
      tableList: tableList
    }

    data = {
      pileMenuList: [
        {
          id: 0,
          name: '全部站点',
          selected: false,
          list: [
            {
              childId: 0,
              name: '全部电站',
              selected: true
            },
            {
              childId: 1,
              name: '空闲中',
              selected: false
            },
            {
              childId: 2,
              name: '直流电',
              selected: false
            },
            {
              childId: 3,
              name: '交流快充',
              selected: false
            },
            {
              childId: 4,
              name: '交流慢充',
              selected: false
            }
          ]
        },
        {
          id: 1,
          name: '距离最近',
          selected: false,
          list: [
            {
              childId: 0,
              name: '距离最近',
              selected: true
            },
            {
              childId: 1,
              name: '好评优先',
              selected: false
            }
          ]
        },
        {
          id: 2,
          name: '不限车型',
          selected: false,
          list: [
            {
              childId: 0,
              name: '不限车型',
              selected: true
            }
          ]
        }
      ],
      pileTableList: [],
      switchType: 'map',
      // 菜单的高度
      menuHeight: 0,
      // 地图的宽高
      mapHeight: '100%',
      mapWidth: '100%',
      mapTop: 0,
      // 用户当前位置
      point: {
        latitude: 0,
        longitude: 0
      },
      // 站桩标志物
      markers: [
        // {
        //   latitude: 22.562405,
        //   longitude: 114.039072,
        //   id: 0,
        //   iconPath: '../images/c_map_stake_leisure@2x.png',
        //   width: 20,
        //   height: 30
        // },
        // {
        //   latitude: 22.943099,
        //   longitude: 114.357868,
        //   id: 1,
        //   iconPath: '../images/c_map_station_other_leisure@2x.png',
        //   width: 20,
        //   height: 30
        // }
      ],
      // 当前地图的缩放级别
      mapScale: 16,
      // 地图上不可移动的控件
      controls: [],
      // 请求数据完成标记
      completeStatus: true,
      // 接口url
      ElectryUrl: {
        getPileList: '',
        scan: ''
      },
      // 查询附近桩请求参数
      getPileListParams: {},
      // 请求桩充电参数
      electryPileParams: {},
      // 已登录的地图组件
      mapControls: [
        // 重新定位按钮
        {
          id: 1,
          position: {
            left: 10 * wx.getStorageSync('kScreenW'),
            top: 465 * wx.getStorageSync('kScreenH'),
            width: 35 * wx.getStorageSync('kScreenW'),
            height: 35 * wx.getStorageSync('kScreenW')
          },
          iconPath: '../images/c_map_location_btn@2x.png',
          clickable: true
        },
        // 筛选控件按钮
        {
          id: 2,
          position: {
            left: 10 * wx.getStorageSync('kScreenW'),
            top: 420 * wx.getStorageSync('kScreenH'),
            width: 35 * wx.getStorageSync('kScreenW'),
            height: 35 * wx.getStorageSync('kScreenW')
          },
          iconPath: '../images/c_map_sift_btn@2x.png',
          clickable: true
        },
        // 地图中心位置按钮
        {
          id: 3,
          position: {
            left: 169.5 * wx.getStorageSync('kScreenW'),
            top: 245.5 * wx.getStorageSync('kScreenH'),
            width: 35 * wx.getStorageSync('kScreenW'),
            height: 35 * wx.getStorageSync('kScreenW')
          },
          iconPath: '../images/c_map_pin@2x.png',
          clickable: false
        },
        // 扫描二维码控件按钮
        {
          id: 4,
          position: {
            left: 325 * wx.getStorageSync('kScreenW'),
            top: 460 * wx.getStorageSync('kScreenH'),
            width: 45 * wx.getStorageSync('kScreenW'),
            height: 45 * wx.getStorageSync('kScreenW')
          },
          iconPath: '../images/c_main_scan_normal.png',
          clickable: true
        }
      ],
      // showModalStatus: false,
      userInfo: {
        nickName: '加载中...'
      },
      searchValue: '',
      type: '列表',
      markerH: 0,
      markerW: 0
    }

    computed = {

    }

    methods = {
      goUserPage (e) {
        if (CTP().checkLogin()) {
          wx.navigateTo({
            url: 'me'
          })
        } else {
          wx.navigateTo({
            url: 'login'
          })
        }
      },
      switchType (e) {
        let that = this
        if (that.switchType === 'map') {
          that.switchType = 'table'
          that.initStakeList()
        } else {
          that.switchType = 'map'
        }
        that.$apply()
      },
      markertap (e) {

      },
      regionchange (e) {
        console.log(e)
        let that = this
        that.mapCtx.getCenterLocation({
          success: (res) => {
            // 经纬度保留6位小数
            // let longitudeFix = res.longitude
            // let latitudeFix = res.latitude
            if (e.type === 'begin') {
              console.log('位置相同，不执行刷新操作')
            } else {
              console.log('位置变化')
              // that.getPileListParams.longitude = longitudeFix
              // that.getPileListParams.latitude = latitudeFix
              // that.$apply()
              // that.getPileList()
            }
          }
        })
      },
      controltap (e) {
        let that = this
        let id = e.controlId
        if (id === 1) {
          // 定位当前位置
          that.getUserCurrentLocation()
        } else if (id === 2) {
          // 筛选功能
          wx.navigateTo({
            url: 'mapFilter'
          })
        } else if (id === 4) {
          if (CTP().checkLogin()) {
            console.log('以获取到用户信息，可以进入扫描界面')
            CTP().getHomeInfo(function (m) {
              let data = m.data
              console.log(data)
              if (data.data.orderCode !== '' && data.data.orderState === '2') {
                wx.setStorageSync('chargingOrderCode', data.data.orderCode)
                wx.navigateTo({
                  url: 'electring'
                  // url: 'myOrder'
                })
              } else {
                wx.navigateTo({
                  url: 'inputScanCode'
                  // url: 'evaluation'
                })
              }
            })
          } else {
            wx.navigateTo({
              url: 'login'
            })
          }
        }
      }
    }

    events = {
      // 获取站点信息
      initStakeList () {
        wx.showToast({
          title: '正在查询站点',
          icon: 'loading',
          duraction: 5000,
          mask: true
        })
        let that = this
        let chargePileType = ''
        let isFree = ''
        let chargeRateType = ''
        let carType = ''
        let sortType = ''
        let firstName = that.pileMenuList[0].name
        let secondName = that.pileMenuList[1].name
        let thirdName = that.pileMenuList[2].name
        let _params = {}
        let session = CTP().session

        if (firstName === '直流电') {
          chargePileType = '1'
        } else if (firstName === '交流快充') {
          chargePileType = '2'
          chargeRateType = '1'
        } else if (firstName === '交流慢充') {
          chargePileType = '2'
          chargeRateType = '2'
        } else if (firstName === '空闲中') {
          isFree = '1'
        }
        if (secondName === '距离最近') {
          sortType = '2'
        } else if (secondName === '好评优先') {
          sortType = '3'
        }
        if (thirdName === '不限车型') {
          carType = ''
        }

        _params = {
          userCode: session === null || session === '' ? '' : JSON.parse(session).user.userId,
          longitude: that.point.longitude,
          latitude: that.point.latitude,
          keyword: '',
          chargePileType: chargePileType,
          chargeRateType: chargeRateType,
          isFree: isFree,
          sortType: (typeof sortType !== 'undefined' ? sortType : 2),
          carType: (typeof carType !== 'undefined' ? carType : ''),
          lstSite: '',

          nonce: 'abc',
          v: '1.0',
          format: 'json',
          method: 'station.search',
          locale: 'zh_CN',
          appKey: session === null || session === '' ? '' : JSON.parse(session).appKey,
          timestamp: new Date().getTime()
        }

        CTP().Ajax({
          params: _params,
          url: '/msp-charge/router',
          success: function (e) {
            let data = e.data.data
            console.log('列表：data')
            console.log(e.data)
            if (data !== undefined) {
              that.pileTableList = data
            } else {
              that.pileTableList = []
            }
            that.pileMenuList.forEach((e, index, arr) => {
              e.selected = false
            })
            that.$apply()
            wx.hideToast()
          }
        })
      },
      // 进入充电详情页前数据获取
      stationData (siteCode, distance) {
        let that = this
        let session = CTP().session
        let paramsDetails = {
          userCode: session === null || session === '' ? '' : JSON.parse(session).user.userId,
          siteCode: siteCode,
          nonce: 'abc',
          v: '1.0',
          format: 'json',
          method: 'station.info',
          locale: 'zh_CN',
          appKey: session !== null || session === '' ? session.appKey : '',
          sessionId: session !== null || session === '' ? session.sessionId : '',
          timestamp: new Date().getTime()
        }
        CTP().Ajax({
          params: paramsDetails,
          url: '/msp-charge/router',
          success: function (e) {
            console.log('站点详情：')
            console.log(e.data)
            wx.setStorageSync('stakeDetails', JSON.stringify(e.data))
            wx.navigateTo({
              url: 'station?v=' + new Date().getTime() + '&distance=' + distance + '&currentPositionLat=' + that.point.latitude + '&currentPositionLng=' + that.point.longitude
            })
          }
        })
      }
    }
    // 创建图表对象
    addMarker (arg) {
      let that = this
      let workingState = arg.workingState
      let iconPath
      let marker = {}
      marker.latitude = Number(arg.latitude)
      marker.longitude = Number(arg.longitude)
      // marker.id = arg.siteCode
      marker.width = that.markerW
      marker.height = that.markerH

      if (arg.siteType === '1') {
        // 个人站
        if (workingState * 1 === 1) {
          iconPath = '../images/c_map_stake_leisure@2x.png'
        } else if (workingState * 1 === 2) {
          iconPath = '../images/c_map_stake_not_available@2x.png'
        } else if (workingState * 1 === 3) {
          iconPath = '../images/c_map_stake_off_line@2x.png'
        }
      } else if (arg.siteType === '2') {
        // 公共站
        if (workingState * 1 === 1) {
          iconPath = '../images/c_map_station_leisure@2x.png'
        } else if (workingState * 1 === 2) {
          iconPath = '../images/c_map_station_not_available@2x.png'
        } else if (workingState * 1 === 3) {
          iconPath = '../images/c_map_station_off_line@2x.png'
        }
      }

      if (arg.isSzOperatingUnit === '2') {
        // 不是深圳运营商
        if (workingState * 1 === 1) {
          iconPath = '../images/c_map_station_other_leisure@2x.png'
        } else if (workingState * 1 === 2) {
          iconPath = '../images/c_map_station_other_not_available@2x.png'
        } else if (workingState * 1 === 3) {
          iconPath = '../images/c_map_station_other_off_line@2x.png'
        }
      }

      marker.iconPath = iconPath
      return marker
    }

    getUserCurrentLocation () {
      this.mapCtx.moveToLocation()
    }
    // 获取桩的集合
    getPileList (o, condition) {
      console.log('获取map站点信息condition：')
      console.log(condition)
      wx.showToast({
        title: '正在获取用户最新状态',
        icon: 'loading',
        duraction: 5000,
        mask: true
      })
      // 检查网络
      // if (checkNetWorkStatus() === false) {
      //   console.log('网络错误')
      // } else {
      let that = this
      let userCode = o === '' ? o : o.user.userId
      let appKey = o === '' ? o : o.appKey
      let markers = []
      let chargePileType = condition.electType !== '' && condition.electType !== undefined ? condition.electType : ''
      let chargeRateType = condition.chargeRateType !== '' && condition.chargeRateType !== undefined ? condition.chargeRateType : ''
      let isFree = condition.isFree !== '' && condition.isFree !== undefined ? condition.isFree : ''
      let carType = condition.modelCode !== '' && condition.modelCode !== undefined ? condition.modelCode : ''

      let _params = {
        userCode: userCode,
        longitude: that.getPileListParams.longitude,
        latitude: that.getPileListParams.latitude,
        keyword: '',
        chargePileType: chargePileType,
        chargeRateType: chargeRateType,
        isFree: isFree,
        sortType: '',
        carType: carType,
        lstSite: '',

        nonce: 'abc',
        v: '1.0',
        format: 'json',
        method: 'station.search',
        locale: 'zh_CN',
        appKey: appKey,
        timestamp: new Date().getTime()
      }
      CTP().Ajax({
        params: _params,
        url: '/msp-charge/router',
        success: function (e) {
          let data = e.data
          console.log('所有站点信息:')
          console.log(data)
          // markers.push({
          //   latitude: Number(that.getPileListParams.latitude),
          //   longitude: Number(that.getPileListParams.longitude),
          //   id: 0,
          //   iconPath: '/images/c_map_stake_leisure@2x.png',
          //   width: 20 * wx.getStorageSync('kScreenW'),
          //   height: 30 * wx.getStorageSync('kScreenH')
          // })
          // markers.push({
          //   latitude: Number(that.getPileListParams.latitude) + 2,
          //   longitude: Number(that.getPileListParams.longitude) + 2,
          //   id: 1,
          //   iconPath: '/images/c_map_station_other_leisure@2x.png',
          //   width: 20 * wx.getStorageSync('kScreenW'),
          //   height: 30 * wx.getStorageSync('kScreenH')
          // })
          data.data.forEach((e, index, arr) => {
            markers.push(that.addMarker(e))
          })

          console.log('总站点数：' + markers.length)
          console.log(markers)
          that.markers = markers
          that.$apply()
          wx.hideToast()
        }
      })
    }

    // 获取站点信息
    initStakeList () {
      let that = this
      let chargePileType = ''
      let isFree = ''
      let chargeRateType = ''
      let carType = ''
      let sortType = ''
      let firstName = that.pileMenuList[0].name
      let secondName = that.pileMenuList[1].name
      let thirdName = that.pileMenuList[2].name
      let _params = {}
      let session = CTP().session

      if (firstName === '直流电') {
        chargePileType = '1'
      } else if (firstName === '交流快充') {
        chargePileType = '2'
        chargeRateType = '1'
      } else if (firstName === '交流慢充') {
        chargePileType = '2'
        chargeRateType = '2'
      } else if (firstName === '空闲中') {
        isFree = '1'
      }
      if (secondName === '距离最近') {
        sortType = '2'
      } else if (secondName === '好评优先') {
        sortType = '3'
      }
      if (thirdName === '不限车型') {
        carType = ''
      }

      _params = {
        userCode: session === null || session === '' ? '' : JSON.parse(session).user.userId,
        longitude: that.point.longitude,
        latitude: that.point.latitude,
        keyword: '',
        chargePileType: chargePileType,
        chargeRateType: chargeRateType,
        isFree: isFree,
        sortType: (typeof sortType !== 'undefined' ? sortType : 2),
        carType: (typeof carType !== 'undefined' ? carType : ''),
        lstSite: '',

        nonce: 'abc',
        v: '1.0',
        format: 'json',
        method: 'station.search',
        locale: 'zh_CN',
        appKey: session === null || session === '' ? '' : JSON.parse(session).appKey,
        timestamp: new Date().getTime()
      }

      CTP().Ajax({
        params: _params,
        url: '/msp-charge/router',
        success: function (e) {
          let data = e.data.data
          console.log('列表：data')
          console.log(e.data)
          if (data !== undefined) {
            that.pileTableList = data
          } else {
            that.pileTableList = []
          }
          that.pileMenuList.forEach((e, index, arr) => {
            e.selected = false
          })
          that.$apply()
        }
      })
    }

    failMessage () {
      wx.showToast({
        title: '连接服务器失败',
        icon: 'loading',
        duration: 2000
      })
    }

    onLoad () {
      let that = this
      console.log('全局路由变量：' + this.$parent.globalData.serverUrl)
      let menuHeight = 49 * wx.getStorageSync('kScreenH')
      let mapHeight = wx.getStorageSync('windowH') - menuHeight
      that.markerW = 20 * wx.getStorageSync('kScreenW')
      that.markerH = 30 * wx.getStorageSync('kScreenH')
      wx.setStorageSync('mapH', mapHeight)
      that.completeStatus = false
      wx.getLocation({
        type: 'gcj02',
        success: (res) => {
          let latitude = res.latitude
          let longitude = res.longitude
          that.point = {
            latitude: latitude,
            longitude: longitude
          }
          // wx.setStorageSync('currentPosition', JSON.stringify(that.point))
          that.completeStatus = true
          that.$apply()
        }
      })
      that.menuHeight = menuHeight
      that.mapHeight = mapHeight
      that.$apply()
    }

    onReady (e) {
      // 通过id获取map对象，创建上下文
      this.mapCtx = wx.createMapContext('map')
    }

    onShow () {
      let that = this
      let checkTimer = setInterval(function () {
        console.log('定时器执行')
        if (that.completeStatus) {
          console.log('定时器停止')
          clearInterval(checkTimer)
          let longitudeFix = that.point.longitude
          let latitudeFix = that.point.latitude
          let mapControls = that.mapControls
          // 过滤条件
          let mapFilter = wx.getStorageSync('mapFilter') !== '' ? JSON.parse(wx.getStorageSync('mapFilter')) : {}
          that.mapTop = that.menuHeight
          that.controls = mapControls
          that.getPileListParams.longitude = longitudeFix
          that.getPileListParams.latitude = latitudeFix
          CTP().checkSession(CTP().weChatAccount, {
            // 用户存在
            success: function (e) {
              if (mapFilter !== '') {
                console.log('查询地图数据，走选择过滤条件分支')
                that.getPileList(e, mapFilter)
                // 清空过滤条件
                wx.setStorageSync('mapFilter', '')
              } else {
                console.log('查询地图数据，走没有任何条件分支')
                that.getPileList('e', {})
              }
            },
            // 用户不存在
            fail: function (e) {
              if (mapFilter !== '') {
                console.log('查询地图数据，走选择过滤条件分支')
                that.getPileList('', mapFilter)
                // 清空过滤条件
                wx.setStorageSync('mapFilter', '')
              } else {
                console.log('查询地图数据，走没有任何条件分支')
                that.getPileList('', {})
              }
            }
          })
          that.$apply()
        } else {
          console.log('定时器没有停止执行')
        }
      }, 1000)
    }

    onHide () {
      console.log('onHide')
    }

    onUnload () {
      console.log('onUnload')
      // 清除weChatAccount和session
      wx.setStorageSync('weChatAccount', '')
      wx.setStorageSync('session', '')
    }

    onPullDownRefresh () {
      console.log('onPullDownRefresh')
    }

    onReachBottom () {
      console.log('onReachBottom')
    }

    onShareAppMessage () {
      // 右上角分享
      console.log('onShareAppMesage')
      return {
        title: '分享给大家',
        path: '/index'
      }
    }
  }
</script>
